version: '3.8'

services:
  api:
    image: api
    container_name: api
    build:
      context: ../
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Local
      - ASPNETCORE_URLS=http://+:80
    ports:
      - "${API_PORT}:80"
    volumes:
      - ~/work/_temp:/app/keys
    depends_on:
      fhir-api:
        condition: service_healthy
    extra_hosts: # Required for docker on Linux to resolve host.docker.internal
      - "host.docker.internal:host-gateway"

  fhir-api:
    image: "mcr.microsoft.com/healthcareapis/r4-fhir-server"
    restart: on-failure
    environment:
      AZURE_CLIENT_ID: ${AZURE_CLIENT_ID:-GetFromKeyVault}
      AZURE_CLIENT_SECRET: ${AZURE_CLIENT_SECRET:-GetFromKeyVault}
      AZURE_TENANT_ID: ${AZURE_TENANT_ID:-GetFromKeyVault}
      FHIRServer__Security__Enabled: "false"
      SqlServer__ConnectionString: "Server=tcp:fhir-sql,1433;Initial Catalog=FHIR;Persist Security Info=False;User ID=sa;Password=${SAPASSWORD};MultipleActiveResultSets=False;Connection Timeout=30;TrustServerCertificate=true;"
      SqlServer__AllowDatabaseCreation: "true"
      SqlServer__Initialize: "true"
      SqlServer__SchemaOptions__AutomaticUpdatesEnabled: "true"
      DataStore: "SqlServer"
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "--silent", "--show-error", "--connect-timeout", "5", "http://localhost:8080/metadata" ]
      interval: 10s
      timeout: 10s
      retries: 6
    depends_on:
      fhir-sql:
        condition: service_healthy

  fhir-sql:
    image: "mcr.microsoft.com/mssql/server"
    user: root
    environment:
      SA_PASSWORD: ${SAPASSWORD}
      ACCEPT_EULA: "Y"
    healthcheck:
      test: [ "CMD", "/opt/mssql-tools/bin/sqlcmd","-U sa -P ${SAPASSWORD} -Q 'SELECT * FROM INFORMATION_SCHEMA.TABLES'" ]
      interval: 10s
      timeout: 10s
      retries: 6
    ports:
      - "1433:1433"
    volumes:
      - ./mounted-data/fhir-sql:/var/opt/mssql/data